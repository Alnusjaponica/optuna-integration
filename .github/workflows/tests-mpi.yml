name: Tests (MPI)

on:
  push:
    branches:
      - main
  pull_request: {}
  schedule:
    - cron: '0 23 * * SUN-THU'
  workflow_dispatch:

jobs:
  tests-mpi:
    if: (github.event_name == 'schedule' && github.repository == 'optuna/optuna-integration') || (github.event_name != 'schedule')
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get -y install openmpi-bin libopenmpi-dev

    - name: Install
      run: |
        python -m pip install --upgrade pip

        pip install --progress-bar off .[test]
        pip install --progress-bar off .[all]

        # Install optuna from optuna master
        pip install git+https://github.com/optuna/optuna@master
    - name: Output installed packages
      run: |
        pip freeze --all

    - name: Output dependency tree
      run: |
        # TODO(not522): Remove a version constraint after resolving pipdeptree problem.
        pip install pipdeptree==2.16.2
        pipdeptree

    - name: Tests
      run: |
        export OMPI_MCA_rmaps_base_oversubscribe=yes
        mpirun -n 2 pytest -- tests/test_pytorch_distributed.py

      env:
        OMP_NUM_THREADS: 1
